type: edu
files:
- name: src/Counter.java
  visible: true
  placeholders:
  - offset: 27
    length: 46
    placeholder_text: // Write your implementation of the class here
    initial_state:
      length: 46
      offset: 27
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      private int value;

          public Counter(int startValue) {
              this.value = startValue;
          }

          public Counter() {
              this(0);
          }

          public int value() {
              return value;
          }

          public void increase() {
              increase(1);
          }

          public void decrease() {
              decrease(1);
          }

          public void increase(int increaseBy) {
              if (increaseBy > 0) {
                  value = value + increaseBy;
              }
          }

          public void decrease(int decreaseBy) {
              if (decreaseBy > 0) {
                  value = value - decreaseBy;
              }
          }
  text: |
    public class Counter {
        // Write your implementation of the class here
    }
  learner_created: false
- name: test/CounterTest.java
  visible: false
  text: "import org.junit.Assert;\nimport org.junit.Test;\n\npublic class CounterTest\
    \ {\n\n    @Test\n    public void testConstructor() {\n        Counter counter\
    \ = new Counter();\n        Assert.assertEquals(0, counter.value());\n       \
    \ \n        counter = new Counter(10);\n        Assert.assertEquals(10, counter.value());\n\
    \    }\n    \n    @Test\n    public void testIncrease() {\n        Counter counter\
    \ = new Counter();\n        counter.increase();\n        \n        Assert.assertEquals(1,\
    \ counter.value());\n        \n        counter.increase(12);\n        Assert.assertEquals(13,\
    \ counter.value());\n    \n        counter.increase(-3);\n        Assert.assertEquals(13,\
    \ counter.value());\n    }\n    \n    @Test\n    public void testDecrease() {\n\
    \        Counter counter = new Counter(10);\n        counter.decrease();\n   \
    \     \n        Assert.assertEquals(9, counter.value());\n        \n        counter.decrease(7);\n\
    \        Assert.assertEquals(2, counter.value());\n        \n        counter.decrease(-10);\n\
    \        Assert.assertEquals(2, counter.value());\n    }\n}\n"
  learner_created: false
- name: src/MainProgram.java
  visible: true
  placeholders:
  - offset: 77
    length: 30
    placeholder_text: // You can test your code here
    initial_state:
      length: 30
      offset: 77
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: // Write your solution here
  text: |
    public class MainProgram {
       public static void main(String[] args) {
          // You can test your code here
       }
    }
  learner_created: false
status: Unchecked
record: -1
