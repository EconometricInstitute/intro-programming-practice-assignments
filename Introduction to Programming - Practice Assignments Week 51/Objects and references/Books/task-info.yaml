type: edu
files:
- name: src/Book.java
  visible: true
  placeholders:
  - offset: 176
    length: 58
    placeholder_text: // Make changes here such that books cannot be added twice
    initial_state:
      length: 58
      offset: 176
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: "public boolean equals(Object compared) {\n       \
      \ if (this == compared) {\n            return true;\n        }\n\n        if\
      \ (!(compared instanceof Book)) {\n            return false;\n        }\n\n\
      \        Book otherBook = (Book) compared;\n\n        if (this.title.equals(otherBook.title)\
      \ && this.year == otherBook.year) {\n            return true;\n        }\n \
      \       \n        return false;\n    }"
  text: |
    public class Book {
        private String title;
        private int year;

        public Book(String title, int year) {
            this.title = title;
            this.year = year;
        }

        // Make changes here such that books cannot be added twice
    }
  learner_created: false
- name: test/BookTest.java
  visible: false
  text: |
    import org.junit.Assert;
    import org.junit.Test;

    import java.util.ArrayList;
    import java.util.List;

    public class BookTest {
        @Test
        public void testAddingToList() {
            List<Book> books = new ArrayList<>();

            Book book = new Book("Seriously...I'm Kidding", 2012);
            books.add(new Book("Seriously...I'm Kidding", 2012));

            Assert.assertTrue(books.contains(new Book("Seriously...I'm Kidding", 2012)));
        }
    }
  learner_created: false
- name: test/MainTest.java
  visible: false
  text: |
    public class MainTest {
    }
  learner_created: false
- name: src/MainProgram.java
  visible: true
  placeholders:
  - offset: 622
    length: 80
    placeholder_text: |-
      // Change the below code to make sure books are not added again
      books.add(book);
    initial_state:
      length: 80
      offset: 622
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      if (!books.contains(book)) {
                      books.add(book);
                  } else {
                      System.out.println("The book is already on the list. Let's not add the same book again.");
                  }
  text: |
    import java.util.ArrayList;
    import java.util.List;
    import java.util.Scanner;

    public class MainProgram {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);

            List<Book> books = new ArrayList<>();
            while (true) {
                System.out.println("Name (empty will stop):");
                String name = scanner.nextLine();

                if (name.isEmpty()) {
                    break;
                }

                System.out.println("Publication year:");
                int year = Integer.parseInt(scanner.nextLine());

                Book book = new Book(name, year);

                // Change the below code to make sure books are not added again
    books.add(book);
            }

            System.out.println("Thank you! Books added:" + books.size());
        }
    }
  learner_created: false
status: Unchecked
record: -1
