type: edu
files:
- name: src/Account.java
  visible: false
  text: "public class Account {\n\n    private String name;\n    private double amount;\n\
    \n    public Account(String name, double amount) {\n        this.name = name;\n\
    \        this.amount = amount;\n    }\n\n    public void deposit(double amount)\
    \ {\n        this.amount += amount;\n    }\n    \n    public void withdraw(double\
    \ amount) {\n        this.amount -= amount;\n    }\n\n    @Override\n    public\
    \ String toString() {\n        return name + \" has a balance of \" + amount;\n\
    \    }\n}\n"
  learner_created: false
- name: src/Main.java
  visible: true
  placeholders:
  - offset: 73
    length: 21
    placeholder_text: // Add your code here
    initial_state:
      length: 21
      offset: 73
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      Account account = new Account("My account", 100);
              account.deposit(20);
              System.out.println(account);
  text: |
    public class Main {
        public static void main(String[] args) {
            // Add your code here
        }
    }
  learner_created: false
- name: test/AccountTest.java
  visible: false
  text: |
    import org.junit.Assert;
    import org.junit.Before;
    import org.junit.Test;

    import java.io.ByteArrayOutputStream;
    import java.io.PrintStream;

    public class AccountTest {
        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
        }

        @Test
        public void testSolution() {
            Main.main(new String[0]);

            Assert.assertTrue(outContent.toString().contains("has a balance of 120.0"));
        }
    }
  learner_created: false
status: Unchecked
record: -1
