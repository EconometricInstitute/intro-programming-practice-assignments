type: edu
files:
- name: src/Product.java
  visible: true
  placeholders:
  - offset: 0
    length: 24
    placeholder_text: // Write your class here
    initial_state:
      length: 24
      offset: 0
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: "public class Product {\n    private double price;\n\
      \    private int quantity;\n    private String name;\n\n    public Product(String\
      \ initialName, double initialPrice, int initialQuantity) {\n        this.name\
      \ = initialName;\n        this.price = initialPrice;\n        this.quantity\
      \ = initialQuantity;\n    }\n    \n    public void printProduct() {\n      \
      \  System.out.println(name + \", price \" + price + \", \" + quantity + \" pcs\"\
      );\n    }\n}\n"
  text: // Write your class here
  learner_created: false
- name: src/Main.java
  visible: true
  placeholders:
  - offset: 73
    length: 31
    placeholder_text: // You can test your class here
    initial_state:
      length: 31
      offset: 73
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      Product product = new Product("Banana", 1.1, 13);
              product.printProduct();
  text: |
    public class Main {
        public static void main(String[] args) {
            // You can test your class here
        }
    }
  learner_created: false
- name: test/ProductTest.java
  visible: false
  text: |
    import org.junit.Assert;
    import org.junit.Before;
    import org.junit.Test;

    import java.io.ByteArrayOutputStream;
    import java.io.PrintStream;

    public class ProductTest {
        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
        }

        @Test
        public void testCase1() {
            Product product = new Product("Banana", 1.1, 13);
            product.printProduct();

            Assert.assertEquals("Banana, price 1.1, 13 pcs", outContent.toString().trim());
        }

        @Test
        public void testCase2() {
            Product product = new Product("Apple", 0.18, 165);
            product.printProduct();

            Assert.assertEquals("Apple, price 0.18, 165 pcs", outContent.toString().trim());
        }
    }
  learner_created: false
status: Unchecked
record: -1
