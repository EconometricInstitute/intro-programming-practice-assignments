type: edu
files:
- name: src/TodoList.java
  visible: true
  placeholders:
  - offset: 57
    length: 32
    placeholder_text: // Add class implementation here
    initial_state:
      length: 32
      offset: 57
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      private final ArrayList<String> tasks;

          public TodoList() {
              tasks = new ArrayList<>();
          }

          public void add(String task) {
              tasks.add(task);
          }

          public void print() {
              for (int i = 0; i < tasks.size(); i++) {
                  System.out.println((i + 1) + ": " + tasks.get(i));
              }
          }

          public void remove(int number) {
              tasks.remove(number - 1);
          }
  text: |
    import java.util.ArrayList;

    public class TodoList {
        // Add class implementation here
    }
  learner_created: false
- name: src/Main.java
  visible: true
  placeholders:
  - offset: 100
    length: 30
    placeholder_text: // You can test your code here
    initial_state:
      length: 30
      offset: 100
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      UserInterface userInterface = new UserInterface(new TodoList(), new Scanner(System.in));
              userInterface.start();
  text: |
    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            // You can test your code here
        }
    }
  learner_created: false
- name: src/UserInterface.java
  visible: true
  placeholders:
  - offset: 60
    length: 32
    placeholder_text: // Add class implementation here
    initial_state:
      length: 32
      offset: 60
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      private TodoList todoList;
          private Scanner scanner;

          public UserInterface(TodoList todoList, Scanner scanner) {
              this.todoList = todoList;
              this.scanner = scanner;
          }

          public void start() {
              while (true) {
                  System.out.print("Command: ");
                  String action = scanner.nextLine();

                  if (action.equals("stop")) {
                      break;
                  } else if (action.equals("add")) {
                      System.out.print("To add: ");
                      String task = scanner.nextLine();

                      todoList.add(task);
                  } else if (action.equals("list")) {
                      todoList.print();
                  } else if (action.equals("remove")) {
                      System.out.print("Which one is removed? ");
                      int toRemove = Integer.parseInt(scanner.nextLine());
                      todoList.remove(toRemove);
                  }
              }
          }
  text: |
    import java.util.Scanner;

    public class UserInterface {
        // Add class implementation here
    }
  learner_created: false
- name: test/TodoListTest.java
  visible: false
  text: "import org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\
    \nimport java.io.ByteArrayOutputStream;\nimport java.io.PrintStream;\n\npublic\
    \ class TodoListTest {\n    private final ByteArrayOutputStream outContent = new\
    \ ByteArrayOutputStream();\n\n    @Before\n    public void setUpStreams() {\n\
    \        System.setOut(new PrintStream(outContent));\n    }\n    \n    @Test\n\
    \    public void testConstructor() {\n        TodoList todoList = new TodoList();\n\
    \        todoList.print();\n        Assert.assertTrue(outContent.toString().isEmpty());\n\
    \    }\n\n    @Test\n    public void testAdd() {\n        TodoList todoList =\
    \ new TodoList();\n        \n        todoList.add(\"read\");\n        todoList.add(\"\
    write\");\n        todoList.add(\"print\");\n        \n        todoList.print();\n\
    \        \n        String[] lines = outContent.toString().split(System.lineSeparator());\n\
    \        \n        Assert.assertEquals(3, lines.length);\n        Assert.assertEquals(\"\
    1: read\", lines[0].trim());\n        Assert.assertEquals(\"2: write\", lines[1].trim());\n\
    \        Assert.assertEquals(\"3: print\", lines[2].trim());\n    }\n\n    @Test\n\
    \    public void testRemove() {\n        TodoList todoList = new TodoList();\n\
    \n        todoList.add(\"read\");\n        todoList.add(\"write\");\n        todoList.add(\"\
    print\");\n\n        todoList.remove(3);\n        todoList.print();\n        \n\
    \        String[] lines = outContent.toString().split(System.lineSeparator());\n\
    \n        Assert.assertEquals(2, lines.length);\n        Assert.assertEquals(\"\
    1: read\", lines[0].trim());\n        Assert.assertEquals(\"2: write\", lines[1].trim());\n\
    \    }\n}\n"
  learner_created: false
- name: test/UserInterfaceTest.java
  visible: false
  text: |
    import org.junit.Assert;
    import org.junit.Before;
    import org.junit.Test;

    import java.io.ByteArrayOutputStream;
    import java.io.PrintStream;
    import java.util.Scanner;

    public class UserInterfaceTest {
        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
        }

        @Test
        public void testCase1() {
            String input = "add" + System.lineSeparator() + "write an essay" + System.lineSeparator() + "add" +
                    System.lineSeparator() + "read a book" + System.lineSeparator() + "stop";

            Scanner scanner = new Scanner(input);
            TodoList todoList = new TodoList();

            UserInterface userInterface = new UserInterface(todoList, scanner);
            userInterface.start();

            String[] lines = outContent.toString().split(System.lineSeparator());

            Assert.assertEquals(1, lines.length);

            System.out.println();
            todoList.print();

            lines = outContent.toString().split(System.lineSeparator());
            Assert.assertEquals(3, lines.length);
            Assert.assertEquals("1: write an essay", lines[1].trim());
            Assert.assertEquals("2: read a book", lines[2].trim());
        }

        @Test
        public void testCase2() {
            String input = "add" + System.lineSeparator() + "write an essay" + System.lineSeparator() + "add" +
                    System.lineSeparator() + "read a book" + System.lineSeparator() + "remove" + System.lineSeparator() +
                    "1" + System.lineSeparator() + "stop";

            Scanner scanner = new Scanner(input);
            TodoList todoList = new TodoList();

            UserInterface userInterface = new UserInterface(todoList, scanner);
            userInterface.start();

            String[] lines = outContent.toString().split(System.lineSeparator());

            Assert.assertEquals(1, lines.length);

            System.out.println();
            todoList.print();

            lines = outContent.toString().split(System.lineSeparator());
            Assert.assertEquals(2, lines.length);
            Assert.assertEquals("1: read a book", lines[1].trim());
        }
    }
  learner_created: false
status: Unchecked
record: -1
