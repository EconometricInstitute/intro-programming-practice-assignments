type: edu
files:
- name: src/GradeRegister.java
  visible: true
  placeholders:
  - offset: 120
    length: 34
    placeholder_text: // Add new instance variables here
    initial_state:
      length: 34
      offset: 120
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: private List<Integer> points;
  - offset: 234
    length: 39
    placeholder_text: // Make changes to the constructor here
    initial_state:
      length: 39
      offset: 234
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: this.points = new ArrayList<>();
  - offset: 390
    length: 34
    placeholder_text: // Make changes to the method here
    initial_state:
      length: 34
      offset: 390
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: this.points.add(points);
  - offset: 1135
    length: 33
    placeholder_text: // Add method implementation here
    initial_state:
      length: 33
      offset: 1135
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      if (grades.isEmpty()) {
                  return -1;
              }

              int sumOfGrades = 0;
              for (int grade : grades) {
                  sumOfGrades = sumOfGrades + grade;
              }

              return 1.0 * sumOfGrades / grades.size();
  - offset: 1222
    length: 33
    placeholder_text: // Add method implementation here
    initial_state:
      length: 33
      offset: 1222
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      if (points.isEmpty()) {
                  return -1;
              }

              int sumOfPoints = 0;
              for (int point : points) {
                  sumOfPoints = sumOfPoints + point;
              }

              return 1.0 * sumOfPoints / points.size();
  text: |
    import java.util.ArrayList;
    import java.util.List;

    public class GradeRegister {

        private List<Integer> grades;
        // Add new instance variables here

        public GradeRegister() {
            this.grades = new ArrayList<>();
            // Make changes to the constructor here
        }

        public void addGradeBasedOnPoints(int points) {
            this.grades.add(pointsToGrades(points));
            // Make changes to the method here
        }

        public int numberOfGrades(int grade) {
            int count = 0;
            for (int received : this.grades) {
                if (received == grade) {
                    count++;
                }
            }

            return count;
        }

        public static int pointsToGrades(int points) {
            int grade = 0;
            if (points < 50) {
                grade = 0;
            } else if (points < 60) {
                grade = 1;
            } else if (points < 70) {
                grade = 2;
            } else if (points < 80) {
                grade = 3;
            } else if (points < 90) {
                grade = 4;
            } else {
                grade = 5;
            }

            return grade;
        }

        public double averageOfGrades() {
            // Add method implementation here
        }

        public double averageOfPoints() {
            // Add method implementation here
        }
    }
  learner_created: false
- name: src/UserInterface.java
  visible: true
  placeholders:
  - offset: 1184
    length: 33
    placeholder_text: // Add content to the method here
    initial_state:
      length: 33
      offset: 1184
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |2-

              System.out.println("The average of points: " + register.averageOfPoints());
              System.out.println("The average of grades: " + register.averageOfGrades());
  text: |
    import java.util.Scanner;

    public class UserInterface {

        private GradeRegister register;
        private Scanner scanner;

        public UserInterface(GradeRegister register, Scanner scanner) {
            this.register = register;
            this.scanner = scanner;
        }

        public void start() {
            readPoints();
            System.out.println("");
            printGradeDistribution();
        }

        public void readPoints() {
            while (true) {
                System.out.print("Points: ");
                String input = scanner.nextLine();
                if (input.equals("")) {
                    break;
                }

                int points = Integer.parseInt(input);

                if (points < 0 || points > 100) {
                    System.out.println("Impossible number.");
                    continue;
                }

                this.register.addGradeBasedOnPoints(points);
            }
        }

        public void printGradeDistribution() {
            int grade = 5;
            while (grade >= 0) {
                int stars = register.numberOfGrades(grade);
                System.out.print(grade + ": ");
                printStars(stars);
                System.out.println("");

                grade = grade - 1;
            }
            // Add content to the method here
        }

        public static void printStars(int stars) {
            while (stars > 0) {
                System.out.print("*");
                stars--;
            }
        }
    }
  learner_created: false
- name: test/GradeRegisterTest.java
  visible: false
  text: |
    import org.junit.Assert;
    import org.junit.Test;

    public class GradeRegisterTest {
        @Test
        public void testAverages() {
            GradeRegister register = new GradeRegister();
            register.addGradeBasedOnPoints(15);
            register.addGradeBasedOnPoints(27);
            register.addGradeBasedOnPoints(95);
            register.addGradeBasedOnPoints(85);

            Assert.assertEquals(2.25, register.averageOfGrades(), 0.01);
            Assert.assertEquals((15.0 + 27 + 95 + 85) / 4, register.averageOfPoints(), 0.01);
        }
    }
  learner_created: false
- name: test/UserInterfaceTest.java
  visible: false
  text: |
    import org.junit.Assert;
    import org.junit.Before;
    import org.junit.Test;

    import java.io.ByteArrayOutputStream;
    import java.io.PrintStream;
    import java.util.Scanner;

    public class UserInterfaceTest {
        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
        }

        @Test
        public void testCase1() {
            String input =
                    "82" + System.lineSeparator() + "83" + System.lineSeparator() + "96" + System.lineSeparator() + "51" +
                            System.lineSeparator() + "48" + System.lineSeparator() + "56" + System.lineSeparator() + "61" +
                            System.lineSeparator() + "" + System.lineSeparator();

            GradeRegister register = new GradeRegister();
            Scanner scanner = new Scanner(input);

            UserInterface userInterface = new UserInterface(register, scanner);
            userInterface.start();

            String[] lines = outContent.toString().split(System.lineSeparator());

            Assert.assertEquals(9, lines.length);

            Assert.assertEquals("The average of points: " + 68.14285714285714, lines[7].trim());
            Assert.assertEquals("The average of grades: " + 2.4285714285714284, lines[8].trim());
        }

        @Test
        public void testCase2() {
            String input =
                    "80" + System.lineSeparator() + "90" + System.lineSeparator() + "85" + System.lineSeparator() + "" +
                            System.lineSeparator();

            GradeRegister register = new GradeRegister();
            Scanner scanner = new Scanner(input);

            UserInterface userInterface = new UserInterface(register, scanner);
            userInterface.start();

            String[] lines = outContent.toString().split(System.lineSeparator());

            Assert.assertEquals(9, lines.length);

            Assert.assertEquals("The average of points: " + 85.0, lines[7].trim());
            Assert.assertEquals("The average of grades: " + 4.333333333333333, lines[8].trim());
        }
    }
  learner_created: false
status: Unchecked
record: -1
