type: edu
files:
- name: src/Calendar.java
  visible: true
  placeholders:
  - offset: 104
    length: 32
    placeholder_text: // Add class implementation here
    initial_state:
      length: 32
      offset: 104
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: "   public List<LocalDate> dates = new ArrayList<>();\n\
      \   \n   public Calendar() {\n       dates = new ArrayList<>();\n   }\n   \n\
      \   public void addDate(LocalDate date) {\n       dates.add(date);\n   }\n \
      \  \n   public void print() {\n       if (dates.isEmpty()) {\n           System.out.println(\"\
      Calendar is empty\");\n       } else {\n           System.out.println(\"Dates\
      \ in the calendar are:\");\n           for (LocalDate date : dates) {\n    \
      \           System.out.println(date);\n           }\n       }\n   }\n   \n \
      \  public LocalDate getLatestDate() {\n       if (dates.isEmpty()) {\n     \
      \      return null;\n       }\n       \n       LocalDate latestDate = dates.get(0);\n\
      \       for (LocalDate date : dates) {\n           if (date.isAfter(latestDate))\
      \ {\n               latestDate = date;\n           }\n       }\n       return\
      \ latestDate;\n   }"
  text: |
    import java.time.LocalDate;
    import java.util.ArrayList;
    import java.util.List;

    public class Calendar {
    // Add class implementation here
    }
  learner_created: false
- name: test/CalendarTest.java
  visible: false
  text: "import org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\
    \nimport java.io.ByteArrayOutputStream;\nimport java.io.PrintStream;\nimport java.io.StringReader;\n\
    import java.time.LocalDate;\n\npublic class CalendarTest {\n    private final\
    \ ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n\n    @Before\n\
    \    public void setUpStreams() {\n        System.setOut(new PrintStream(outContent));\n\
    \    }\n    \n    @Test\n    public void testConstructor() {\n        Calendar\
    \ calendar = new Calendar();\n        \n        calendar.print();\n        \n\
    \        Assert.assertEquals(\"Calendar is empty\", outContent.toString().trim());\n\
    \    }\n\n    @Test\n    public void testAdd() {\n        Calendar calendar =\
    \ new Calendar();\n        calendar.addDate(LocalDate.of(2019, 1, 1));\n     \
    \   calendar.addDate(LocalDate.of(2019, 2, 5));\n\n        calendar.print();\n\
    \n        String[] lines = outContent.toString().split(System.lineSeparator());\n\
    \        \n        Assert.assertEquals(3, lines.length);\n        Assert.assertEquals(\"\
    Dates in the calendar are:\", lines[0].trim());\n        Assert.assertEquals(LocalDate.of(2019,\
    \ 1, 1).toString(), lines[1].trim());\n        Assert.assertEquals(LocalDate.of(2019,\
    \ 2, 5).toString(), lines[2].trim());\n    }\n    \n    @Test\n    public void\
    \ testLatest() {\n        Calendar calendar = new Calendar();\n        calendar.addDate(LocalDate.of(2019,\
    \ 1, 1));\n        calendar.addDate(LocalDate.of(2019, 2, 5));\n        calendar.addDate(LocalDate.of(2016,\
    \ 9, 25));\n        calendar.addDate(LocalDate.of(2019, 2, 16));\n        calendar.addDate(LocalDate.of(2019,\
    \ 3, 5));\n\n        Assert.assertEquals(LocalDate.of(2019, 3, 5), calendar.getLatestDate());\n\
    \    }\n}\n"
  learner_created: false
- name: src/Main.java
  visible: true
  text: |
    import java.time.LocalDate;

    public class Main {
        public static void main(String[] args) {
            Calendar calendar = new Calendar();
            calendar.addDate(LocalDate.of(2019,2,5));
            calendar.addDate(LocalDate.of(2020, 3, 8));
            calendar.addDate(LocalDate.of(2020, 8,1));

            calendar.print();

            System.out.println("The latest date is: " + calendar.getLatestDate());
        }
    }
  learner_created: false
status: Unchecked
record: -1
