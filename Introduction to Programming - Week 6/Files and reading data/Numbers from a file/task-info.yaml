type: edu
files:
- name: src/NumberFromFile.java
  visible: true
  placeholders:
  - offset: 166
    length: 21
    placeholder_text: // Add your code here
    initial_state:
      length: 21
      offset: 166
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: "Scanner scanner = new Scanner(System.in);\n      \
      \  \n        System.out.print(\"File? \");\n        String fileName = scanner.nextLine();\n\
      \n        System.out.print(\"Lower bound? \");\n        int lowerBound = scanner.nextInt();\n\
      \n        System.out.print(\"Upper bound? \");\n        int upperBound = scanner.nextInt();\n\
      \        \n        int foundNumbers = 0;\n        try (Scanner fileScanner =\
      \ new Scanner(Paths.get(fileName))) {\n            while (fileScanner.hasNextLine())\
      \ {\n                int number = Integer.parseInt(fileScanner.nextLine());\n\
      \                if (lowerBound <= number && number <= upperBound) {\n     \
      \               foundNumbers++;\n                }\n            }\n        }\
      \ catch (IOException e) {\n            e.printStackTrace();\n        }\n\n \
      \       System.out.println(\"Numbers: \" + foundNumbers);"
  text: |
    import java.io.IOException;
    import java.nio.file.Paths;
    import java.util.Scanner;

    public class NumberFromFile {
        public static void main(String[] args) {
            // Add your code here
        }
    }
  learner_created: false
- name: numbers-1.txt
  visible: true
  text: |
    300
    9
    20
    15
  learner_created: false
- name: numbers-2.txt
  visible: true
  text: |
    123
    -5
    12
    67
    -300
    1902
  learner_created: false
- name: test/NumbersFromFileTest.java
  visible: false
  text: "import org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\
    \nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\n\
    import java.io.InputStream;\nimport java.io.PrintStream;\n\npublic class NumbersFromFileTest\
    \ {\n    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n\
    \n    @Before\n    public void setUpStreams() {\n        System.setOut(new PrintStream(outContent));\n\
    \    }\n    \n    @Test\n    public void testFirstCase() {\n        String input\
    \ = \"numbers-1.txt\" + System.lineSeparator() + \"15\" + System.lineSeparator()\n\
    \                + \"20\";\n\n        InputStream in = new ByteArrayInputStream(input.getBytes());\n\
    \        System.setIn(in);\n        \n        NumberFromFile.main(new String[0]);\n\
    \        \n        String[] lines = outContent.toString().split(System.lineSeparator());\n\
    \        \n        Assert.assertEquals(1, lines.length);\n        Assert.assertTrue(lines[0].endsWith(\"\
    Numbers: 2\"));\n    }\n\n    @Test\n    public void testSecondCase() {\n    \
    \    String input = \"numbers-1.txt\" + System.lineSeparator() + \"0\" + System.lineSeparator()\n\
    \                + \"300\";\n\n        InputStream in = new ByteArrayInputStream(input.getBytes());\n\
    \        System.setIn(in);\n\n        NumberFromFile.main(new String[0]);\n\n\
    \        String[] lines = outContent.toString().split(System.lineSeparator());\n\
    \n        Assert.assertEquals(1, lines.length);\n        Assert.assertTrue(lines[0].endsWith(\"\
    Numbers: 4\"));\n    }\n    \n    @Test\n    public void testThirdCase() {\n \
    \       String input = \"numbers-2.txt\" + System.lineSeparator() + \"-10\" +\
    \ System.lineSeparator()\n                + \"130\";\n\n        InputStream in\
    \ = new ByteArrayInputStream(input.getBytes());\n        System.setIn(in);\n\n\
    \        NumberFromFile.main(new String[0]);\n\n        String[] lines = outContent.toString().split(System.lineSeparator());\n\
    \n        Assert.assertEquals(1, lines.length);\n        Assert.assertTrue(lines[0].endsWith(\"\
    Numbers: 4\"));\n    }\n    \n    \n    \n}\n"
  learner_created: false
status: Unchecked
record: -1
